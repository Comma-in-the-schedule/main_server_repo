name: Deploy to EC2 with Docker

on:
  push:
    branches:
      - feature
  pull_request:
    branches:
      - feature

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew clean bootJar

      - name: Verify JAR file existence
        run: |
          ls -l build/libs/

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Create directory on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p /home/ubuntu/myapp/config

      - name: Upload files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            docker-compose.yml
            Dockerfile
          target: "/home/ubuntu/myapp/"

      - name: Create config directory and save application.yaml
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p /home/ubuntu/myapp/config
            echo "${{ secrets.APPLICATION_YAML }}" | base64 --decode > /home/ubuntu/myapp/config/application.yaml

      - name: Deploy Images with Docker compose
        uses: appleboy/ssh-action@master
        env:
          APP: "preonb"
          COMPOSE: "/home/ubuntu/myapp/docker-compose.yml"
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: APP, COMPOSE
          script_stop: true
          script: |
            cd /home/ubuntu/myapp
            sudo docker compose down
            sudo docker pull shimhun/preonb
            export $(cat .env | xargs)  # ðŸŸ¢ í™˜ê²½ ë³€ìˆ˜ ë¡œë“œ
            sudo docker compose up -d
