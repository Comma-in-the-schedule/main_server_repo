name: Deploy to EC2

on:
  push:
    branches:
      - feature
  pull_request:
    branches:
      - feature

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Spring Boot Application
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Build and Push Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/comma-server:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/comma-server:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker stop comma-server || true
            docker rm comma-server || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/comma-server:latest
            docker run -d --name comma-server -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/comma-server:latest \
              -e MYSQL_HOST=${{ secrets.MYSQL_HOST }} \
              -e MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
              -e MYSQL_USER=${{ secrets.MYSQL_USER }} \
              -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
              -e MAIL_HOST=${{ secrets.MAIL_HOST }} \
              -e MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
              -e MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \

