name: Deploy Spring Boot with Docker Compose

on:
  push:
    branches:
      - feature
  pull_request:
    branches:
      - feature

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설정 (빌드용)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

#      # 3. Spring Boot 빌드
#      - name: Build Spring Boot application
#        run: ./gradlew clean build

#      # 4. Docker 이미지 빌드
#      - name: Build Docker Image
#        run: docker build -t spring-boot-app:${{ github.sha }} .
      # 4. Docker 이미지 빌드 (환경변수를 Dockerfile에 전달)
      - name: Build Docker Image
        run: |
          docker build \
            --build-arg MYSQL_HOST=${{ secrets.MYSQL_HOST }} \
            --build-arg MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
            --build-arg MYSQL_USER=${{ secrets.MYSQL_USER }} \
            --build-arg MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
            --build-arg MAIL_HOST=${{ secrets.MAIL_HOST }} \
            --build-arg MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
            --build-arg MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
            --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -t spring-boot-app:${{ github.sha }} .
      

      # 5. Docker Compose 파일 & 이미지 Oracle Cloud로 전송
      - name: Copy files to Oracle Cloud
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "~/app/"

      - name: Push Docker Image to Oracle Cloud
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          source: "docker save my-spring-boot-app:${{ github.sha }} | gzip"
          target: "~/docker-images/my-spring-boot-app.tar.gz"

      # 6. Oracle Cloud에서 Docker Compose 실행
      - name: Deploy Docker Compose
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            # Docker Compose 중지 후 제거
            cd ~/app
            docker-compose down || true
            
            # 기존 Docker 이미지 로드
            gunzip -c ~/docker-images/my-spring-boot-app.tar.gz | docker 
            
            # .env 파일 생성 (GitHub Secrets 값 적용)
            echo ".env 파일 생성 중..."
            cat <<EOF > .env
            MYSQL_HOST=${{ secrets.MYSQL_HOST }}
            MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
            MYSQL_USER=${{ secrets.MYSQL_USER }}
            MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            MAIL_HOST=${{ secrets.MAIL_HOST }}
            MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
            MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            EOF

            # 환경변수 로드
            echo "환경변수 로드 완료"
            cat .env
            export $(grep -v '^#' .env | xargs)
            
            # Docker Compose 실행
            docker-compose --env-file .env up -d --build